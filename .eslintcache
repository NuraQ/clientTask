[{"C:\\Users\\nqassrawi\\clientTask\\src\\index.js":"1","C:\\Users\\nqassrawi\\clientTask\\src\\reportWebVitals.js":"2","C:\\Users\\nqassrawi\\clientTask\\src\\App.js":"3","C:\\Users\\nqassrawi\\clientTask\\src\\Controller.jsx":"4","C:\\Users\\nqassrawi\\clientTask\\src\\components\\Map\\map.jsx":"5","C:\\Users\\nqassrawi\\clientTask\\src\\components\\store\\globalState.jsx":"6","C:\\Users\\nqassrawi\\clientTask\\src\\components\\PolygonsTable\\polygonsTable.jsx":"7","C:\\Users\\nqassrawi\\clientTask\\src\\components\\store\\actions.jsx":"8"},{"size":630,"mtime":1611667231201,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1611556835302,"results":"11","hashOfConfig":"10"},{"size":249,"mtime":1611556835293,"results":"12","hashOfConfig":"10"},{"size":4771,"mtime":1612082257264,"results":"13","hashOfConfig":"10"},{"size":3963,"mtime":1612093648275,"results":"14","hashOfConfig":"10"},{"size":358,"mtime":1612081146404,"results":"15","hashOfConfig":"10"},{"size":5222,"mtime":1612093854019,"results":"16","hashOfConfig":"10"},{"size":1657,"mtime":1612093549606,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"ucuy7h",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\nqassrawi\\clientTask\\src\\index.js",[],["37","38"],"C:\\Users\\nqassrawi\\clientTask\\src\\reportWebVitals.js",[],"C:\\Users\\nqassrawi\\clientTask\\src\\App.js",["39"],"import logo from './logo.svg';\r\nimport './style/App.css';\r\nimport Controller from'./Controller'\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div ><Controller></Controller></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\nqassrawi\\clientTask\\src\\Controller.jsx",["40","41","42","43"],"\r\n  \r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport { SimpleMap } from './components/Map/map'\r\nimport useGlobal from './components/store/globalState';\r\n \r\nimport { RenderTable, select } from './components/PolygonsTable/polygonsTable'\r\n\r\n\r\nexport default function Controller() {\r\n    const [properties, setProperties] = React.useState([])\r\n    const [globalState,globalActions] = useGlobal();\r\n\r\n\r\n    const colors = [  \"AliceBlue\",\r\n    \"Aqua\",  \"Aquamarine\",\r\n    \"BlanchedAlmond\",\"BlueViolet\",\r\n    \"Brown\",\"BurlyWood\",\r\n    \"DarkGreen\",\"DarkKhaki\",\r\n    \"DarkMagenta\",  \"DarkOliveGreen\",\r\n    \"DarkOrange\",\r\n    \"DarkOrchid\",\"DarkRed\",\r\n    \"DarkSalmon\",  \"DarkSeaGreen\",\r\n    \"DarkSlateBlue\",\"DarkSlateGrey\",\r\n    \"DarkTurquoise\", \"DarkViolet\",\r\n    \"DeepPink\",\r\n    \"Gold\",  \"GoldenRod\",\r\n    \"Green\",\"HotPink\",\r\n    \"IndianRed\", \"Indigo\",\r\n    \"Ivory\", \"Khaki\",\r\n    \"LavenderBlush\",  \"LawnGreen\",\r\n    \"LemonChiffon\",   \"LightBlue\",\r\n    \"LightCoral\", \"LightCyan\",\r\n    \"LightGoldenRodYellow\",  \"LightGray\",\r\n    \"LightGrey\",\"LightGreen\",\r\n    \"LightPink\", \"LightSalmon\",\r\n    \"LightSeaGreen\",\"LightSkyBlue\",\r\n    \"LightSlateGray\", \"LightSlateGrey\",\r\n    \"LightSteelBlue\", \"LightYellow\",\r\n    \"Lime\",\"LimeGreen\",\r\n    \"Linen\", \"Magenta\",\r\n    \"Maroon\", \"MediumAquaMarine\",\r\n    \"MediumBlue\", \"MediumOrchid\",\r\n    \"MediumPurple\",\"MediumSeaGreen\",\r\n    \"MediumSlateBlue\",\"MediumSpringGreen\",\r\n    \"MediumTurquoise\", \"MediumVioletRed\",\r\n    \"MidnightBlue\", \r\n    \"MistyRose\",\"Moccasin\",\r\n    \"NavajoWhite\",  \"Navy\",\r\n    \"OliveDrab\",\"Orange\",\r\n    \"OrangeRed\",\"Orchid\",\r\n    \"PaleGoldenRod\",\"PaleGreen\",\r\n    \"PaleTurquoise\",\"PaleVioletRed\",\r\n    \"PapayaWhip\",\"PeachPuff\",\r\n     \"Peru\", \"Pink\", \r\n    \"Purple\",\"RebeccaPurple\",\r\n    \"Red\",\"RosyBrown\",\r\n    \"RoyalBlue\",\"SaddleBrown\",\r\n    \"Salmon\", \"SandyBrown\",\r\n    \"SeaGreen\",\"SeaShell\",\r\n    \"SkyBlue\",\"SlateBlue\",\r\n    \"SlateGray\",\"SlateGrey\",\r\n    \"SteelBlue\",  \"Tan\",\r\n    \"Teal\", \"Thistle\",\r\n    \"Tomato\",\"Turquoise\",\r\n    \"Violet\",\"Wheat\",\r\n\"Yellow\",\"YellowGreen\",\r\n  ];\r\n    const names = [  \"Bruce\",\"Cook\",\r\n    \"Carolyn\",\"Morgan\",\r\n    \"Albert\",\"Walker\",\r\n    \"Randy\",\"Reed\",\r\n    \"Larry\",\"Barnes\",\r\n    \"Lois\",\"Wilson\",\r\n    \"Jesse\",\"Campbell\",\r\n    \"Ernest\",\"Rogers\",\r\n    \"Theresa\",\"Patterson\",\r\n    \"Henry\",\"Simmons\",\r\n    \"Michelle\",\"Perry\",\r\n    \"Frank\",\"Butler\",\r\n    \"Shirley\"]\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        function fetchData() {\r\n            fetch('https://services5.arcgis.com/GfwWNkhOj9bNBqoJ/arcgis/rest/services/NYC_Election_Districts_Water_Included/FeatureServer/0/query?where=1=1&outFields=*&outSR=4326&f=pgeojson', {\r\n                // mode: 'no-cors',\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                },\r\n            },\r\n            ).then(response => {\r\n                if (response.ok) {\r\n                    response.json().then(json => {\r\n                        // setFeatures(json.features)\r\n                        globalActions.setAllPolys(json.features)\r\n                        console.log(\"AL;\", globalState.allPolygonsData)\r\n\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setPropertiesTable()\r\n    }, [globalState.allPolygonsData])\r\n\r\n    useEffect(() => {\r\n        appendNewDrawnPolygonsToTable()    \r\n        }, [globalState.polygonAddedToMap])\r\n\r\n    function setPropertiesTable() {\r\n        globalActions.addColorForPoly()\r\n        const propertiesData = [];\r\n        globalState.allPolygonsData.forEach(property => {\r\n            propertiesData.push(property.properties);\r\n            let color = colors[Math.floor(Math.random() * colors.length)];\r\n            let name = names[Math.floor(Math.random() * names.length)];\r\n            globalActions.addColorForPoly(color);\r\n            globalActions.addNameForPoly(name)\r\n        });\r\n        setProperties(propertiesData);\r\n    }\r\n\r\n    function appendNewDrawnPolygonsToTable(){\r\n        if (globalState.PolygonAddedToMap != null){        \r\n        let newTable = [...properties,[globalState.PolygonAddedToMap]]\r\n        let color = colors[Math.floor(Math.random() * colors.length)];\r\n        globalActions.addColorForPoly(color);\r\n        setProperties(newTable)\r\n        }\r\n    }\r\n    function displayInTable(id, show) {\r\n        select(id, show);\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <div style ={{display: \"flex\"}} >\r\n                <div ><SimpleMap pos={globalState.allPolygonsData} mapper={displayInTable} /></div>\r\n                <div ><RenderTable properties = {properties}></RenderTable></div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n","C:\\Users\\nqassrawi\\clientTask\\src\\components\\Map\\map.jsx",["44","45","46","47","48","49"],"C:\\Users\\nqassrawi\\clientTask\\src\\components\\store\\globalState.jsx",[],"C:\\Users\\nqassrawi\\clientTask\\src\\components\\PolygonsTable\\polygonsTable.jsx",["50","51","52","53","54"],"C:\\Users\\nqassrawi\\clientTask\\src\\components\\store\\actions.jsx",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":8,"nodeType":"61","messageId":"62","endLine":1,"endColumn":12},{"ruleId":"59","severity":1,"message":"63","line":3,"column":17,"nodeType":"61","messageId":"62","endLine":3,"endColumn":25},{"ruleId":"64","severity":1,"message":"65","line":106,"column":8,"nodeType":"66","endLine":106,"endColumn":10,"suggestions":"67"},{"ruleId":"64","severity":1,"message":"68","line":110,"column":8,"nodeType":"66","endLine":110,"endColumn":37,"suggestions":"69"},{"ruleId":"64","severity":1,"message":"70","line":114,"column":12,"nodeType":"66","endLine":114,"endColumn":43,"suggestions":"71"},{"ruleId":"59","severity":1,"message":"72","line":14,"column":6,"nodeType":"61","messageId":"62","endLine":14,"endColumn":12},{"ruleId":"59","severity":1,"message":"73","line":23,"column":9,"nodeType":"61","messageId":"62","endLine":23,"endColumn":12},{"ruleId":"59","severity":1,"message":"74","line":25,"column":9,"nodeType":"61","messageId":"62","endLine":25,"endColumn":27},{"ruleId":"64","severity":1,"message":"75","line":72,"column":3,"nodeType":"66","endLine":72,"endColumn":5,"suggestions":"76"},{"ruleId":"64","severity":1,"message":"77","line":77,"column":5,"nodeType":"66","endLine":77,"endColumn":73,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":90,"column":3,"nodeType":"61","messageId":"81","endLine":90,"endColumn":8},{"ruleId":"59","severity":1,"message":"82","line":20,"column":6,"nodeType":"61","messageId":"62","endLine":20,"endColumn":9},{"ruleId":"83","severity":1,"message":"84","line":24,"column":15,"nodeType":"85","messageId":"86","endLine":24,"endColumn":43},{"ruleId":"59","severity":1,"message":"87","line":29,"column":7,"nodeType":"61","messageId":"62","endLine":29,"endColumn":16},{"ruleId":"59","severity":1,"message":"88","line":42,"column":8,"nodeType":"61","messageId":"62","endLine":42,"endColumn":12},{"ruleId":"64","severity":1,"message":"89","line":62,"column":5,"nodeType":"66","endLine":62,"endColumn":25,"suggestions":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'globalActions' and 'globalState.allPolygonsData'. Either include them or remove the dependency array.","ArrayExpression",["93"],"React Hook useEffect has a missing dependency: 'setPropertiesTable'. Either include it or remove the dependency array.",["94"],"React Hook useEffect has a missing dependency: 'appendNewDrawnPolygonsToTable'. Either include it or remove the dependency array.",["95"],"'center' is assigned a value but never used.","'map' is assigned a value but never used.","'drawnPolygonsPaths' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'polygonsArray'. Either include it or remove the dependency array.",["96"],"React Hook useEffect has a missing dependency: 'showPolygonFromMap'. Either include it or remove the dependency array.",["97"],"no-const-assign","'paths' is constant.","const","'sty' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'useStyles' is assigned a value but never used.","'list' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'globalActions'. Either include it or remove the dependency array. Mutable values like 'changedRow.current' aren't valid dependencies because mutating them doesn't re-render the component.",["98"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [globalActions, globalState.allPolygonsData]",{"range":"111","text":"112"},"Update the dependencies array to be: [globalState.allPolygonsData, setPropertiesTable]",{"range":"113","text":"114"},"Update the dependencies array to be: [appendNewDrawnPolygonsToTable, globalState.polygonAddedToMap]",{"range":"115","text":"116"},"Update the dependencies array to be: [polygonsArray]",{"range":"117","text":"118"},"Update the dependencies array to be: [globalState.hoveredPoly, polygonsArray, globalState.polygonsColors, showPolygonFromMap]",{"range":"119","text":"120"},"Update the dependencies array to be: [globalActions]",{"range":"121","text":"122"},[3279,3281],"[globalActions, globalState.allPolygonsData]",[3347,3376],"[globalState.allPolygonsData, setPropertiesTable]",[3460,3491],"[appendNewDrawnPolygonsToTable, globalState.polygonAddedToMap]",[1930,1932],"[polygonsArray]",[1989,2057],"[globalState.hoveredPoly, polygonsArray, globalState.polygonsColors, showPolygonFromMap]",[1970,1990],"[globalActions]"]